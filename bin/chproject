#!/usr/bin/env bash
#
# Copyright (c) 2017 Kevin R. Bullock. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

function find_chproject_root () {
  local root="$1"
  local reporoot

  while true; do
    root=$(cd "$root" && pwd -P)
    if [[ -f "$root/.projectrc" ]]; then
      echo -n "$root"
      return
    fi
    if [[ -d "$root/.hg" || -d "$root/.git" ]]; then
      reporoot=$root
    fi
    [[ "$root" = "/" ]] && break
    root="$root/.."
  done

  if [[ -n "$reporoot" ]]; then
    echo -n $reporoot
    return
  fi

  (cd "$1" && pwd -P)
}

if [[ -n "$CHPROJECT" ]]; then
  echo "$CHPROJECT"
  exit 0
fi

if [[ -z "$1" ]]; then
  echo "usage: $0 [DIR]" >&2
  exit 2
fi

[[ -d "$1" ]] || {
  echo "$0: No such file or directory: $1" >&2
  exit 1
}

export CHPROJECT=$(find_chproject_root "$1")
export -n TARGETDIR PROJNAME TMPINIT
TARGETDIR="$1"
shift
PROJNAME=$(basename "$CHPROJECT")
TMPINIT=$(mktemp -t chproject) || {
  echo "$0: failed to create temporary file" >&2
  exit -1
}
trap "rm -f -- '$TMPINIT'" EXIT
trap "exit 2" HUP INT QUIT TERM

cat >"$TMPINIT" <<EOF
rm -f "$TMPINIT"
echo -ne "\033]2;$PROJNAME\007"
[[ -f "$HOME/.bashrc" ]] && . "$HOME/.bashrc" || true

echo "entering $PROJNAME"
cd "$TARGETDIR"
if [[ -f "$CHPROJECT/.projectrc" ]]; then
  . "$CHPROJECT/.projectrc" "$@"
fi
EOF

exec -a "($PROJNAME) $SHELL" "$SHELL" --rcfile "$TMPINIT"
